@page "/compleatedtasks"
@page "/compleatedtasks/{msg}"
@using BlazorDesktopDemo.Models;
@inject BlazorDesktopDemo.Data.ApplicationDbContext db;

<center><h5><u>Completed @strong</u></h5></center>

<NavLink class="nav-link btn btn-primary" href="todoitems" style="width:35%;" > Navigate to TODO Items</NavLink>
<hr>
<input type="date" @bind=@date @onfocusout=@Refresh>
<button class="btn btn-primary" @onclick=@Refresh>></button>
<table class="table table-bordered">
<thead>
    <th>
        <td>
            Descriptions
        </td>
        <td>
            Comment
        </td>
        <td>
            Cat.
        </td>
        <td></td>
    </th>
</thead>
<tbody>
@foreach (var item in itemsC)
{    
    <tr>
        <td>
            @item.finishedDate.ToShortDateString()
        </td>
        <td>
            @item.Description
        </td>
        <td>
            @item.Comment
        </td>
        <td>
            @item.Category
        </td>
                <td>
            <button class="btn btn-danger"  @onclick="@(() => Remove(item.id))">X</button>
        </td>
    </tr>     
}
</tbody>
</table>

@code
{    
    [Parameter]
    public string msg {get; set;}

    public string strong; 

    List<ToDoItem> itemsC = new List<ToDoItem>();

    DateTime date = DateTime.Now;    
    
    protected override void OnInitialized()
    {        
        itemsC = db.Items.Where(x=>x.IsDone == true 
        && x.finishedDate.Date == date.Date).ToList();
        strong = msg ?? "Items";
    }
    public void Refresh()
    {
           OnInitialized();
    }
        public void Remove(string id)
    {

        var item = db.Items.Where(x=>x.id == id).FirstOrDefault();
        db.Remove(item);
        db.SaveChanges();
        StateHasChanged();
        OnInitialized();

    }

}

     